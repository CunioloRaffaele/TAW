{
	"info": {
		"_postman_id": "e7c11884-2634-4f92-8540-33cebe3e3616",
		"name": "TAW proj",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "44749352",
		"_collection_link": "https://taw777-5732.postman.co/workspace/TAW~ca7a60a1-2db0-4330-8620-58346985db05/collection/16058383-e7c11884-2634-4f92-8540-33cebe3e3616?action=share&source=collection_link&creator=44749352"
	},
	"item": [
		{
			"name": "Accounts",
			"item": [
				{
					"name": "Create new account",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"TestAccount\",\n    \"email\": \"testaccount@gmail.com\",\n    \"password\": \"ciao\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverEndpoint}}{{serverPort}}/api/user/newAccount",
							"host": [
								"{{serverEndpoint}}{{serverPort}}"
							],
							"path": [
								"api",
								"user",
								"newAccount"
							]
						},
						"description": "### API Request Description\n\nThis endpoint allows you to create a new user account by sending a POST request to the specified URL. The request should include the user's name, surname, email, and password in the request body.\n\n#### Request Body\n\n- `name`: (text) The user's first name.\n    \n- `email`: (text) The user's email address.\n    \n- `password`: (text) The user's chosen password.\n    \n\n### Response\n\nUpon successful execution, the server will respond with a status code of 200 and a JSON object containing a message and user JWT."
					},
					"response": []
				},
				{
					"name": "Get info about account",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjUsIm5hbWUiOiJUZXN0QWNjb3VudCIsImVtYWlsIjoidGVzdGFjY291bnRAZ21haWwuY29tIiwicm9sZSI6MSwiaWF0IjoxNzQ4MDk1ODI3LCJleHAiOjE3NDgwOTk0Mjd9.-b4-W96WZqsT6gcpv2xv_oUN7kQSLmRCjOlRi92RMJc",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverEndpoint}}{{serverPort}}/api/user/getAccountInfo",
							"host": [
								"{{serverEndpoint}}{{serverPort}}"
							],
							"path": [
								"api",
								"user",
								"getAccountInfo"
							]
						},
						"description": "### API Request Description\n\nThe `GET` request retrieves the account information for a user from the server. Data is extracted from JWT not from database.  \n\nUSE THIS ONLY FOR TESTING"
					},
					"response": []
				},
				{
					"name": "Login and get JWT token",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"testaccount@gmail.com\",\n    \"password\": \"ciao\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverEndpoint}}{{serverPort}}/api/user/login",
							"host": [
								"{{serverEndpoint}}{{serverPort}}"
							],
							"path": [
								"api",
								"user",
								"login"
							]
						},
						"description": "### API Request Description\n\nThis endpoint allows you to get JWT token when user needs to log in.\n\n#### Request Body\n\n- `email`: (text) The user's email address.\n    \n- `password`: (text) The user's chosen password.\n    \n\n### Response\n\nUpon successful execution, the server will respond with a status code of 200 and a JSON object containing a message and user JWT.\n\nElse error...\n\nFrom frontend save token to local storage\n\n``` javascript\nconsole.log(\"Data received when invoking the /login endpoint:\")\n        console.log(JSON.stringify(data));\n        this.token = (data as ReceivedToken).token;\n        if ( remember ) {\n          console.log(\"Saving token to localstorage\")\n          localStorage.setItem('postmessages_token', this.token as string);\n        } else {\n          console.log(\"Token not saved to local storage.\")\n        }\n ```"
					},
					"response": []
				},
				{
					"name": "Delete User Account",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjQsIm5hbWUiOiJUZXN0QWNjb3VudCIsImVtYWlsIjoidGVzdGFjY291bnRAZ21haWwuY29tIiwicm9sZSI6MCwiaWF0IjoxNzQ4MDg0MTE2LCJleHAiOjE3NDgwODc3MTZ9.3QJ5Ap-w8EHcyVhMCQNwM7afkTvuvRjIpRKJnnDjin8",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverEndpoint}}{{serverPort}}/api/user/deleteAccount",
							"host": [
								"{{serverEndpoint}}{{serverPort}}"
							],
							"path": [
								"api",
								"user",
								"deleteAccount"
							]
						},
						"description": "### API Request Description\n\nThis endpoint allows you to delete a logged in user."
					},
					"response": []
				},
				{
					"name": "Sudo List all accounts",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjUsIm5hbWUiOiJUZXN0QWNjb3VudCIsImVtYWlsIjoidGVzdGFjY291bnRAZ21haWwuY29tIiwicm9sZSI6MSwiaWF0IjoxNzQ4MTY0NDc1LCJleHAiOjE3NDgxNjgwNzV9.Wk76gO1aSY3iivnEfTsvROfZzLnTTu0dmlKJzmyiAvc",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverEndpoint}}{{serverPort}}/api/user/sudoListAccounts",
							"host": [
								"{{serverEndpoint}}{{serverPort}}"
							],
							"path": [
								"api",
								"user",
								"sudoListAccounts"
							]
						},
						"description": "### API Request Description\n\nThis endpoint allows airline to list all the users registered in the system.\n\n### Response\n\nUpon successful execution, the server will respond with a status code of 200 and a JSON object containing a list."
					},
					"response": []
				},
				{
					"name": "Sudo delete account",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjUsIm5hbWUiOiJUZXN0QWNjb3VudCIsImVtYWlsIjoidGVzdGFjY291bnRAZ21haWwuY29tIiwicm9sZSI6MSwiaWF0IjoxNzQ4MDk1ODI3LCJleHAiOjE3NDgwOTk0Mjd9.-b4-W96WZqsT6gcpv2xv_oUN7kQSLmRCjOlRi92RMJc",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverEndpoint}}{{serverPort}}/api/user/sudoDeleteAccount/:id",
							"host": [
								"{{serverEndpoint}}{{serverPort}}"
							],
							"path": [
								"api",
								"user",
								"sudoDeleteAccount",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "6"
								}
							]
						},
						"description": "### API Request Description\n\nThis endpoint allows admin user to delete a user given a user id"
					},
					"response": []
				}
			],
			"description": "Account management endpoints"
		},
		{
			"name": "Airlines",
			"item": [
				{
					"name": "Create new account",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjUsIm5hbWUiOiJUZXN0QWNjb3VudCIsImVtYWlsIjoidGVzdGFjY291bnRAZ21haWwuY29tIiwicm9sZSI6MSwiaWF0IjoxNzQ4MTY1NDMwLCJleHAiOjE3NDgxNjkwMzB9.6514JqZUinA_pq8kIzdzgWOXKg-pBM4wotSMiwi-PUo",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"airline\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverEndpoint}}{{serverPort}}/api/airlines/invite",
							"host": [
								"{{serverEndpoint}}{{serverPort}}"
							],
							"path": [
								"api",
								"airlines",
								"invite"
							]
						},
						"description": "### API Request Description\n\nAirlines cannot register themselves but must be added by an admin user who sets a temporary password. Then, at the first login, the new airline must set its password and any relevant information (read more in the documentation of the airline enrollment endpoint).\n\nThis endpoints allow admins to create new ailrline account.\n\n#### Request Body\n\n- `name`: (text) The airline name.\n    \n\n### Response\n\nUpon successful execution, the server will respond with a status code of 200 and a JSON object containing the invitation code needed for the first login."
					},
					"response": []
				},
				{
					"name": "Airline Enrollment",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\": \"pass\",\n    \"country\": \"county\",\n    \"motto\": \"motto\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverEndpoint}}{{serverPort}}/api/airlines/enroll/:invitationCode/:airlineName",
							"host": [
								"{{serverEndpoint}}{{serverPort}}"
							],
							"path": [
								"api",
								"airlines",
								"enroll",
								":invitationCode",
								":airlineName"
							],
							"variable": [
								{
									"key": "invitationCode",
									"value": "y8cura32rxg"
								},
								{
									"key": "airlineName",
									"value": "airline"
								}
							]
						},
						"description": "### API Request Description\n\nThis endpoints allow airlines to add informations and change password after reciving the invitation id.\n\n#### Request Body\n\n- password: (text) The new password.\n    \n- country: (text) The airline country.\n    \n- motto: (text) The airline motto.\n    \n\n### Response\n\nUpon successful execution, the server will respond with a status code of 200 and a JSON object containing the invitation code needed for the first login."
					},
					"response": []
				},
				{
					"name": "Login and get JWT token",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"airline\",\n    \"password\": \"pass\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverEndpoint}}{{serverPort}}/api/airlines/login",
							"host": [
								"{{serverEndpoint}}{{serverPort}}"
							],
							"path": [
								"api",
								"airlines",
								"login"
							]
						},
						"description": "### API Request Description\n\nThis endpoint allows airline to get JWT token when user needs to log in.\n\n**Airline must be enrolled for this endpoint to work.**\n\n#### Request Body\n\n- `name`: (text) The airline name.\n    \n- `password`: (text) The airline's chosen password.\n    \n\n### Response\n\nUpon successful execution, the server will respond with a status code of 200 and a JSON object containing a message and airline JWT."
					},
					"response": []
				},
				{
					"name": "List all airlines",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverEndpoint}}{{serverPort}}/api/airlines/list",
							"host": [
								"{{serverEndpoint}}{{serverPort}}"
							],
							"path": [
								"api",
								"airlines",
								"list"
							]
						},
						"description": "### API Request Description\n\nThis endpoint allows airline to list all the airlines registered in the system.\n\n### Response\n\nUpon successful execution, the server will respond with a status code of 200 and a JSON object containing a list."
					},
					"response": []
				}
			],
			"description": "Airlines management endpoints"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}